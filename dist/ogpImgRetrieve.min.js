/*!
 *   ogpImgRetrieve.js
 * See {@link https://github.com/dettalant/ogpImgRetrieve}
 *
 * @author dettalant
 * @version v0.2.1
 * @license MIT License
 */
var ogpImgRetrieve=function(e){"use strict";function t(e,r){if("fetch"in window)fetch(e).then(function(e){return e.text()}).then(function(e){r(e)});else{var t=new XMLHttpRequest;t.onreadystatechange=function(){4===t.readyState&&200===t.status&&r(t.responseText)},t.open("GET",e,!0),t.send()}}return e.fetchHTML=t,e.run=function(r){void 0===r?console.error("ogpImgRetrieveError: run()関数には引数となるオブジェクトが必要です"):void 0===r.imgEl||null===r.imgEl?console.error("ogpImgRetrieveError: run()関数の引数オブジェクトにimgElが存在しない"):void 0===r.url&&console.error("ogpImgRetrieveError: run()関数の引数オブジェクトにurlが存在しない");t(r.url,function(e){!function(e,r,t){r instanceof HTMLImageElement?t?(r.dataset.src=e,r.classList.add("lazyload")):r.src=e:console.error("imgSrcOverwrite: 入力ElementがHTMLImageElementではない")}(function(e){for(var r=(new DOMParser).parseFromString(e,"text/html").head.children,t=r.length,n="",o=0;o<t;o++){var i=r[o],l=i.getAttribute("property");if(null!==l&&-1!==l.indexOf("og:image")){var s=i.getAttribute("content");if(null!==s){n=s;break}}}return n}(e),r.imgEl,r.isUseLazysizes)})},e}({});
